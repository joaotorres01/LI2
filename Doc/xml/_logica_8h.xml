<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="_logica_8h" kind="file" language="C++">
    <compoundname>Logica.h</compoundname>
    <includes refid="_camada_01de_01_dados_8h" local="yes">Camada de Dados.h</includes>
    <includes refid="_interface_8h" local="yes">Interface.h</includes>
    <includes refid="_listas_ligadas_8h" local="yes">ListasLigadas.h</includes>
    <includedby refid="_interface_8h" local="yes">C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Interface.h</includedby>
    <includedby refid="_logica_8c" local="yes">C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.c</includedby>
    <includedby refid="main_8c" local="yes">C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/main.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h</label>
        <link refid="_logica_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Camada de Dados.h</label>
        <link refid="_camada_01de_01_dados_8h"/>
      </node>
      <node id="7">
        <label>ListasLigadas.h</label>
        <link refid="_listas_ligadas_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>stdlib.h</label>
      </node>
      <node id="3">
        <label>Interface.h</label>
        <link refid="_interface_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.c</label>
        <link refid="_logica_8c"/>
      </node>
      <node id="1">
        <label>C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h</label>
        <link refid="_logica_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Interface.c</label>
        <link refid="_interface_8c"/>
      </node>
      <node id="2">
        <label>C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Interface.h</label>
        <link refid="_interface_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/main.c</label>
        <link refid="main_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_logica_8h_1ac313d7e553b1e2b5f266acb9bfff8141" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jogar</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>jogar</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Esta função é responsável por realizar as jogadas pretendidas pelos jogadores, bem como atualizar o estado do jogo, isto é atualizar o número de jogadas e o jogador atual. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada efectuada pelo jogador </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Retorna um inteiro de forma a garantir a conclusão da jogada pretendida </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h" line="18" column="5" bodyfile="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.c" bodystart="8" bodyend="17" declfile="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h" declline="18" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_logica_8h_1a29d47f0e43124e57b790efda4631e0ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jogadaValida</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>jogadaValida</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Esta função verifica se a coordenada pretendida pelo jogador é válida, avaliando todos os casos possíveis dado o estado atual do jogo. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada pretendida pelo jogador </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Retorna 1 no caso de a jogada for válida e retorna 0 caso contrário </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h" line="26" column="5" bodyfile="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.c" bodystart="19" bodyend="37" declfile="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h" declline="26" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_logica_8h_1ab0a22d7247e74d4c25bb66d827bfe407" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jogoAcabou</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>jogoAcabou</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Esta função verifica, após uma jogada ser efectuada, se é possível continuar a jogar, (se o jogo acabou) avaliando todos os casos dado o estado atual do jogo. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Retorna 1 caso o jogo tenha acabado (parabenizando o jogador vencedor), e retorna 0 caso contrário </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h" line="33" column="5" bodyfile="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.c" bodystart="39" bodyend="65" declfile="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h" declline="33" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_logica_8h_1adad282b5f50fd968fb0e96357c502674" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_listas_ligadas_8h_1ac63b3952d3b1c0abee7ff9f58682ae6a" kindref="member">LISTA</ref></type>
        <definition>LISTA vizinhas</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>vizinhas</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>\ Esta função (das mais importantes na implementação do bot) acumula numa lista ligada, todas as coordenadas vizinhas da coordenada atual e que não se encontram preenchidas <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Lista com as várias coordenadas vizinhas e que estão livres </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h" line="40" column="7" bodyfile="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.c" bodystart="67" bodyend="81" declfile="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h" declline="40" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="_logica_8h_1a4c3b2b1dc7addb69027e1f9aaaa6290a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref></type>
        <definition>COORDENADA jogadaAleatoria</definition>
        <argsstring>(LISTA vizinhasVazias)</argsstring>
        <name>jogadaAleatoria</name>
        <param>
          <type><ref refid="_listas_ligadas_8h_1ac63b3952d3b1c0abee7ff9f58682ae6a" kindref="member">LISTA</ref></type>
          <declname>vizinhasVazias</declname>
        </param>
        <briefdescription>
<para>Esta função é responsável por fazer jogar aleatoriamente o bot para umas das coordenadas possíveis. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vizinhasVazias</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista de coordenadas vizinhas da coordenada atual e que estão livres </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Coordenada aleatória que o bot irá efectuar </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h" line="47" column="12" bodyfile="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.c" bodystart="83" bodyend="96" declfile="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h" declline="47" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_logica_8h_1a221543c72d65884a5465538a1db3b8b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref></type>
        <definition>COORDENADA mcts</definition>
        <argsstring>(ESTADO *e, LISTA L)</argsstring>
        <name>mcts</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="_listas_ligadas_8h_1ac63b3952d3b1c0abee7ff9f58682ae6a" kindref="member">LISTA</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
<para>Esta é das funções que nos deu mais trabalho e que assenta na heurística de Monte Carlo Tree Search e que permite através de simulações de estados futuros escolher a melhor coordenada para o bot efectuar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista de coordenadas possíveis que o bot pode fazer, avaliando uma a uma qual ou quais são as melhores a efectuar </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Coordenada a efectuar pelo bot </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h" line="55" column="12" bodyfile="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.c" bodystart="99" bodyend="135" declfile="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h" declline="55" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="_logica_8h_1af8bdee0375a687f3de16c08a1c0971e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jogoAcabouMCTS</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>jogoAcabouMCTS</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Esta é uma função auxiliar que através de um simulação do próximo estado dada uma das coordenadas possíveis ao bot efectuar, verifica se o jogo vai acabar após o bot ter jogado. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada que o bot vai usar na simulação do próximo estado e vai avaliar se lhe permite ganhar </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Número de casas preenchidas, sendo que este número vai ser usado para avaliar os vários casos se o jogo acaba ou não </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h" line="63" column="5" bodyfile="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.c" bodystart="170" bodyend="180" declfile="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h" declline="63" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_logica_8h_1ac6997e79810d91fc9e12bab17e729e64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int verificaErro</definition>
        <argsstring>(ESTADO *e, COORDENADA tmp)</argsstring>
        <name>verificaErro</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref></type>
          <declname>tmp</declname>
        </param>
        <briefdescription>
<para>Esta função verifica quais as coordenadas da lista de coordenadas possíveis a efectuar, que lhe permitem perder, removendo-as da lista de jogadas. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tmp</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada que o bot vai usar na simulação do próximo estado e vai avaliar se o faz perder </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Retorna 1 se a coordenada o faz perder e retorna 0 caso contrário </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h" line="71" column="5" declfile="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h" declline="71" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_logica_8h_1ac2c74db18ada13fc8b4a568588d5903b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int vizinhasDaCasaVencedora</definition>
        <argsstring>(COORDENADA c)</argsstring>
        <name>vizinhasDaCasaVencedora</name>
        <param>
          <type><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Esta função apenas serve para o bot ter em conta que se (por exemplo) for o jogador 1, então não irá querer jogar para as coordenadas vizinhas da casa vencedora do adversário. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada que o bot irá comparar com as casas vizinhas da casa vencedora do adversário </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Retorna 2 caso a coordenada avaliada for uma das casas vizinhas da casa vencedora do jogador 1 e retorna 1 caso seja uma das casas vizinhas da casa vencedora do jogador 2 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h" line="78" column="5" bodyfile="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.c" bodystart="212" bodyend="216" declfile="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h" declline="78" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_logica_8h_1a13ad88f9c16d9030931ef93e8be40063" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_listas_ligadas_8h_1ac63b3952d3b1c0abee7ff9f58682ae6a" kindref="member">LISTA</ref></type>
        <definition>LISTA mctsSearcing</definition>
        <argsstring>(ESTADO *e, LISTA melhoresJogadas)</argsstring>
        <name>mctsSearcing</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="_listas_ligadas_8h_1ac63b3952d3b1c0abee7ff9f58682ae6a" kindref="member">LISTA</ref></type>
          <declname>melhoresJogadas</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>\Esta função é capaz de simular até 2 estado futuros de forma a armazenar as coordenadas na lista de coordenadas possíveis que dão ao bot maior chance de não perder <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o 1º estado futuro </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>melhoresJogadas</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista de jogadas que (após o bot ver que não existe nenhuma que o faz vencer) lhe permitem não perder </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Lista de jogadas que dão ao bot maior chance de não perder para o adversário (caso o adversário esteja a preparar para o encurralar) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h" line="86" column="7" bodyfile="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.c" bodystart="137" bodyend="165" declfile="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h" declline="86" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="_logica_8h_1a3384c56333c301445cc261be7acca14d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int imprimeLista</definition>
        <argsstring>(LISTA L)</argsstring>
        <name>imprimeLista</name>
        <param>
          <type><ref refid="_listas_ligadas_8h_1ac63b3952d3b1c0abee7ff9f58682ae6a" kindref="member">LISTA</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h" line="88" column="5" bodyfile="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.c" bodystart="218" bodyend="226" declfile="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h" declline="88" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="_logica_8h_1ae8f5a00d01ee6de8d93843a87b389035" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref></type>
        <definition>COORDENADA distancia_euclidiana</definition>
        <argsstring>(ESTADO *e, LISTA L)</argsstring>
        <name>distancia_euclidiana</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="_listas_ligadas_8h_1ac63b3952d3b1c0abee7ff9f58682ae6a" kindref="member">LISTA</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>\ Esta função, quando o jogo está &quot;mais aberto&quot;, ou seja é impossível prever qual a melhor jogada a efectuar (pois tudo depende de como joga o adversário), faz com que o bot se aproxime da sua casa vencedora usando a heurística da Distância menor usando a distância Euclidiana <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista de jogadas que o bot pode fazer sem perder, mas também sem ganhar (pois nesta fase é impossível prever como o jogo pode desenrolar-se) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Coordenada mais próxima da casa vencedora do bot </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h" line="96" column="12" bodyfile="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.c" bodystart="228" bodyend="253" declfile="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h" declline="96" declcolumn="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Definição da lógica do jogo Rastros e do bot </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>PROJETOLI2_LOGICA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PROJETOLI2_LOGICA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_camada_01de_01_dados_8h" kindref="compound">Camada de Dados.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_interface_8h" kindref="compound">Interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_listas_ligadas_8h" kindref="compound">ListasLigadas.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_logica_8h_1ac313d7e553b1e2b5f266acb9bfff8141" kindref="member">jogar</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_logica_8h_1a29d47f0e43124e57b790efda4631e0ef" kindref="member">jogadaValida</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_logica_8h_1ab0a22d7247e74d4c25bb66d827bfe407" kindref="member">jogoAcabou</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="struct_l_i_s_t_a_l_i_g" kindref="compound">LISTA</ref><sp/><ref refid="_logica_8h_1adad282b5f50fd968fb0e96357c502674" kindref="member">vizinhas</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/><ref refid="_logica_8h_1a4c3b2b1dc7addb69027e1f9aaaa6290a" kindref="member">jogadaAleatoria</ref>(<ref refid="struct_l_i_s_t_a_l_i_g" kindref="compound">LISTA</ref><sp/>vizinhasVazias);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/><ref refid="_logica_8h_1a221543c72d65884a5465538a1db3b8b0" kindref="member">mcts</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="struct_l_i_s_t_a_l_i_g" kindref="compound">LISTA</ref><sp/>L);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_logica_8h_1af8bdee0375a687f3de16c08a1c0971e5" kindref="member">jogoAcabouMCTS</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="_logica_8h_1ac6997e79810d91fc9e12bab17e729e64" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_logica_8h_1ac6997e79810d91fc9e12bab17e729e64" kindref="member">verificaErro</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/>tmp);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_logica_8h_1ac2c74db18ada13fc8b4a568588d5903b" kindref="member">vizinhasDaCasaVencedora</ref>(<ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><ref refid="struct_l_i_s_t_a_l_i_g" kindref="compound">LISTA</ref><sp/><ref refid="_logica_8h_1a13ad88f9c16d9030931ef93e8be40063" kindref="member">mctsSearcing</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="struct_l_i_s_t_a_l_i_g" kindref="compound">LISTA</ref><sp/>melhoresJogadas);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_logica_8h_1a3384c56333c301445cc261be7acca14d" kindref="member">imprimeLista</ref>(<ref refid="struct_l_i_s_t_a_l_i_g" kindref="compound">LISTA</ref><sp/>L);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/><ref refid="_logica_8h_1ae8f5a00d01ee6de8d93843a87b389035" kindref="member">distancia_euclidiana</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="struct_l_i_s_t_a_l_i_g" kindref="compound">LISTA</ref><sp/>L);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//PROJETOLI2_LOGICA_H</highlight></codeline>
    </programlisting>
    <location file="C:/Users/franc/CLionProjects/ProjetoLI2/Projeto/Logica.h"/>
  </compounddef>
</doxygen>
